--	sys.dm_db_missing_index_group_stats	空間インデックスを除く、欠落インデックスグループに関する概要を返します。]
--		group_handle			欠落インデックスグループの識別子。この識別子はサーバー内で一意です。他の列では、グループ内のインデックスが欠落していると考えられる、すべてのクエリに関する情報が提供されます。インデックスグループには、インデックスが1つだけ含まれます。
--		unique_compiles			この欠落インデックスグループによって影響を受けるコンパイルおよび再コンパイルの数。 多くの異なるクエリでコンパイルおよび再コンパイルが行われるほど、この列の値は大きくなります。
--		user_seeks				グループ内の推奨インデックスを使用できたユーザークエリによって発生したシーク数。
--		user_scans				グループ内の推奨インデックスを使用できたユーザークエリによって発生したスキャン数。
--		last_user_seek			グループ内の推奨インデックスを使用できたユーザークエリによって発生した前回のシークの日時。
--		last_user_scan			グループ内の推奨インデックスを使用できたユーザークエリによって発生した前回のスキャンの日時。
--		avg_total_user_cost		グループ内のインデックスによって削減できたユーザークエリの平均コスト。
--		avg_user_impact			この欠落インデックス グループが実装されていた場合のユーザークエリへの効果の平均パーセンテージ (%)。この値は、この欠落インデックスグループが実装されていた場合に減少したクエリコストの平均パーセンテージを示します。
--		system_seeks			グループ内の推奨インデックスを使用できたシステムクエリ(AutoStatsクエリなど)によって発生したシーク数。詳細については、「AutoStatsイベント クラス」を参照してください。
--		system_scans			グループ内の推奨インデックスを使用できたシステムクエリによって発生したスキャン数。
--		last_system_seek		グループ内の推奨インデックスを使用できたシステムクエリによって発生した前回のシステムシークの日時。
--		last_system_scan		グループ内の推奨インデックスを使用できたシステムクエリによって発生した前回のシステムスキャンの日時。
--		avg_total_system_cost	グループ内のインデックスによって削減できたシステムクエリの平均コスト。
--		avg_system_impact		この欠落インデックスグループが実装されていた場合のシステムクエリへの効果の平均パーセンテージ(%)。この値は、この欠落インデックスグループが実装されていた場合に減少したクエリコストの平均パーセンテージを示します。	
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--	sys.dm_db_missing_index_groups	空間インデックスを除く、特定の欠落インデックスグループに含まれている欠落インデックスに関する情報を返します。
--		index_group_handle		欠落インデックスグループの識別子
--		index_handle			index_group_handleで示されたグループに属する、欠落インデックスの識別子。インデックスグループには、インデックスが1つだけ含まれます。
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--	sys.dm_db_missing_index_details	空間インデックスを除く、欠落インデックスに関する詳細情報を返します。
--		index_handle			特定の欠落インデックスの識別子。識別子はサーバー内で一意です。index_handleはこのテーブルのキーです。
--		database_id				欠落インデックスを含むテーブルがあるデータベースの識別子。
--		object_id				インデックスが欠落しているテーブルの識別子。
--		equality_columns		次の形式の等値述語に使用できる列のコンマ区切り一覧。table.column=constant_value
--		inequality_columns		次の形式のような不等値述語に使用できる列のコンマ区切り一覧。table.column > constant_value。"=" 以外の比較演算子はすべて、不等値を表します。
--		included_columns		クエリの包括列として必要な列のコンマ区切り一覧。包括列または付加列の詳細については、「付加列インデックスの作成」を参照してください。
--		statement				インデックスが欠落しているテーブルの名前。
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


--張ったほうがよいインデックス一覧------------------------------------------------------------------------------------------------------------------------------------------------------------------
--	直近一週間分を抽出
--	Index_advantageが桁違いなものをチェックして見直す
--	Equality, inequality columns を インデックスキー列に指定
--		付加列 (included_columns) の使いすぎに注意	→ テーブルの部分コピーを作っているのと変わらなくなる
--		addtime がよく出てくる？						→ 必要ないのに addtime も問い合わせていないか注意
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT
	user_seeks * avg_total_user_cost * (avg_user_impact * 0.01)	AS [index_advantage],			--seek数×削減可能コスト×期待値 → ここが桁違いのものを対象に見直す
	migs.last_user_seek											AS [Last User Seek],			--前回seekのタイムスタンプ
	mid.[statement]												AS [Database.Schema.Table],		--対象テーブル
	mid.equality_columns										AS [Equality Columns],			--必要なインデックスキー(＝判定用)
	mid.inequality_columns										AS [Inequality Columns],		--必要なインデックスキー(≠判定用)
	mid.included_columns										AS [Included Columns],			--必要な付加列
	migs.unique_compiles										AS [Unique Compiles],			--インデックスを張ったときに発生するコンパイル数
	migs.user_seeks												AS [User Seeks],				--インデックスを張った場合のシーク数
	migs.avg_total_user_cost									AS [Average Toral User Cost],	--インデックスを張った場合にどれだけコスト削減できるか
	migs.avg_user_impact										AS [Average User Impact]		--インデックスを張った場合の効果
FROM sys.dm_db_missing_index_group_stats	AS migs WITH (NOLOCK)
INNER JOIN sys.dm_db_missing_index_groups	AS mig  WITH (NOLOCK)
   ON migs.group_handle = mig.index_group_handle
INNER JOIN sys.dm_db_missing_index_details  AS mid  WITH (NOLOCK)
   ON mig.index_handle = mid.index_handle
WHERE last_user_seek > GETDATE() - 7
ORDER BY index_advantage DESC OPTION (RECOMPILE);
